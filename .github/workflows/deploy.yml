name: Deploy Duke Eats to VM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Add your tests here when you have them
    # - name: Run Python tests
    #   run: python -m pytest

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        port: ${{ secrets.VM_PORT || 22 }}
        envs: OPENAI_API_KEY
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        script: |
          # Navigate to application directory
          cd ${{ secrets.VM_APP_PATH || '/opt/duke-eats' }}
          
          # Create .env file with secrets from GitHub
          cat > .env << EOF
          OPENAI_API_KEY=$OPENAI_API_KEY
          OPENAI_API_BASE=https://litellm.oit.duke.edu
          DATABASE_URL=sqlite:///duke_nutrition.db
          EOF
          
          # Login to GitHub Container Registry
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Pull the latest image
          docker pull ${{ needs.build-and-push.outputs.image-tag }}
          
          # Stop existing containers
          docker-compose down || true
          
          # Update docker-compose.yml to use the new image
          sed -i 's|build: \.|image: ${{ needs.build-and-push.outputs.image-tag }}|g' docker-compose.yml
          
          # Start the application
          docker-compose up -d
          
          # Clean up old images
          docker image prune -f
          
          # Wait for health check
          sleep 30
          
          # Verify deployment
          if curl -f http://localhost:3000/api/health; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed - health check failed"
            docker-compose logs
            exit 1
          fi

  notify:
    needs: [test, build-and-push, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      if: github.ref == 'refs/heads/main'
      run: |
        if [[ "${{ needs.deploy.result }}" == "success" ]]; then
          echo "🚀 Duke Eats deployed successfully!"
        else
          echo "💥 Deployment failed!"
        fi
